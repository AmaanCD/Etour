version: '3.8'

services:
  # PostgreSQL Database Service
  db:
    image: postgres:13 # Use PostgreSQL version 13
    container_name: etour-postgres # Name of the container
    environment:
      POSTGRES_DB: etour_db # Database name
      POSTGRES_USER: postgres # Database user
      POSTGRES_PASSWORD: Amaan@123 # Database password
    ports:
      - "5432:5432" # Map host port 5432 to container port 5432
    volumes:
      - postgres_data:/var/lib/postgresql/data # Persist database data
    networks:
      - etour-network

  # Redis Service for Caching
  redis:
    image: redis:6.2-alpine # Use Redis version 6.2
    container_name: etour-redis
    ports:
      - "6379:6379" # Map host port 6379 to container port 6379
    volumes:
      - redis-data:/data # Persist Redis data
    networks:
      - etour-network
    # Keycloak Service for Authentication and Authorization

  pgadmin:
    image: dpage/pgadmin4  # Official pgAdmin 4 image
    container_name: pgadmin-container
    environment:
      - PGADMIN_DEFAULT_EMAIL=admin@admin.com
      - PGADMIN_DEFAULT_PASSWORD=admin  # Login credentials for pgAdmin
    ports:
      - "9080:80"  # Expose pgAdmin's UI on port 8080

    volumes:
      - pgadmin_data:/var/lib/pgadmin
    restart: always
    networks:
      - etour-network

  keycloak:
    image: quay.io/keycloak/keycloak:18.0.2
    container_name: keycloak-etour
    environment:
      KC_DB: postgres
      KC_DB_URL: jdbc:postgresql://db:5432/keycloak_etour
      KC_DB_USERNAME: postgres
      KC_DB_PASSWORD: Amaan@123
      KC_HOSTNAME: localhost
      KEYCLOAK_ADMIN: admin
      KEYCLOAK_ADMIN_PASSWORD: admin
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:7080/health/ready" ]
      interval: 15s
      timeout: 2s
      retries: 15
    command: [ "start-dev", "--http-port", "7080", "--https-port", "7443" ]
    networks:
      - etour-network


    ports:
      - "7080:7080"  # Exposing Keycloak on port 8080
      # Volume for Keycloak data
      # Volume for Keycloak themes
    depends_on:
      - db
    restart: always



  # Spring Boot Application Service
  app:
    image: ghcr.io/amaancd/e-tour-app:latest # Build the Docker image using the Dockerfile in the current directory
    container_name: etour-app # Name of the container
    ports:
      - "8080:8080" # Map host port 8080 to container port 8080
    depends_on:
      - db # Ensure the database starts before the application
      - redis
      - keycloak
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://db:5432/etour_db # Database URL
      SPRING_DATASOURCE_USERNAME: postgres # Database username
      SPRING_DATASOURCE_PASSWORD: Amaan@123 # Database password
      SPRING_JPA_HIBERNATE_DDL_AUTO: update # Hibernate auto-update schema
      SPRING_SECURITY_OAUTH2_RESOURCESERVER_JWT_ISSUER-URI: http://keycloak:7080/realms/etour
      SPRING_SECURITY_CERTS : http://keycloak:7080/realms/etour/protocol/openid-connect/certs
    pull_policy: always #This is must or else it will never pull latest image from github action

    networks:
      - etour-network
# Define a volume to persist PostgreSQL data
volumes:
  postgres_data:
  redis-data:
  pgadmin_data:
  keycloak_data:

networks:
  etour-network:
    driver: bridge
